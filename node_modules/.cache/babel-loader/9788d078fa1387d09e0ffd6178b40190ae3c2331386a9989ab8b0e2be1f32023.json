{"ast":null,"code":"import React,{useState}from'react';import ModalMessage from'./ModalMessage';// Імпортуємо компонент для модального вікна\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const LoginForm=_ref=>{let{toggleForm,onLoginSuccess}=_ref;const[loginInput,setLoginInput]=useState('');const[password,setPassword]=useState('');const[message,setMessage]=useState('');// Для повідомлень\nconst[isModalOpen,setIsModalOpen]=useState(false);// Стан модального вікна\nconst handleLogin=async e=>{e.preventDefault();// Перевірка, чи введене значення є email чи username\nconst isEmail=loginInput.includes('@');const payload=isEmail?{email:loginInput,password}// Якщо email, передаємо email\n:{username:loginInput,password};// Якщо username, передаємо username\ntry{const response=await fetch('/api/login',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(payload)});const result=await response.json();if(response.ok){setMessage('Login successful');localStorage.setItem(\"token\",result.token);// Save token\nonLoginSuccess(result.username);// Pass the username to the parent component\n}else{setMessage(result.message||'Login failed');}}catch(error){setMessage('Login failed: '+error.message);}finally{setIsModalOpen(true);// Відкриваємо модальне вікно після запиту\n}};const closeModal=()=>{setIsModalOpen(false);// Закриваємо модальне вікно\n};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"form\",{className:\"form\",onSubmit:handleLogin,children:[/*#__PURE__*/_jsx(\"h2\",{className:\"form__title\",children:\"Login\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form__input\",placeholder:\"Email or Username\",value:loginInput,onChange:e=>setLoginInput(e.target.value),required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",className:\"form__input\",placeholder:\"Password\",value:password,onChange:e=>setPassword(e.target.value),required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"form__button\",children:\"Login\"}),/*#__PURE__*/_jsx(\"p\",{onClick:toggleForm,className:\"form__toggle-link\",children:\"Don't have an account? Register here.\"})]}),isModalOpen&&/*#__PURE__*/_jsx(ModalMessage,{message:message,onClose:closeModal})]});};export default LoginForm;","map":{"version":3,"names":["React","useState","ModalMessage","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","LoginForm","_ref","toggleForm","onLoginSuccess","loginInput","setLoginInput","password","setPassword","message","setMessage","isModalOpen","setIsModalOpen","handleLogin","e","preventDefault","isEmail","includes","payload","email","username","response","fetch","method","headers","body","JSON","stringify","result","json","ok","localStorage","setItem","token","error","closeModal","children","className","onSubmit","type","placeholder","value","onChange","target","required","onClick","onClose"],"sources":["/home/m-bohach/Документи/personal/tabletop/src/Login/LoginForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport ModalMessage from './ModalMessage';  // Імпортуємо компонент для модального вікна\n\nconst LoginForm = ({ toggleForm, onLoginSuccess }) => {\n  const [loginInput, setLoginInput] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');  // Для повідомлень\n  const [isModalOpen, setIsModalOpen] = useState(false);  // Стан модального вікна\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n\n    // Перевірка, чи введене значення є email чи username\n    const isEmail = loginInput.includes('@');\n    const payload = isEmail\n      ? { email: loginInput, password }  // Якщо email, передаємо email\n      : { username: loginInput, password };  // Якщо username, передаємо username\n\n    try {\n      const response = await fetch('/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(payload),\n      });\n\n      const result = await response.json();\n\n      if (response.ok) {\n        setMessage('Login successful');\n        localStorage.setItem(\"token\", result.token); // Save token\n        onLoginSuccess(result.username); // Pass the username to the parent component\n      } else {\n        setMessage(result.message || 'Login failed');\n      }\n    } catch (error) {\n      setMessage('Login failed: ' + error.message);\n    } finally {\n      setIsModalOpen(true); // Відкриваємо модальне вікно після запиту\n    }\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);  // Закриваємо модальне вікно\n  };\n\n  return (\n    <>\n      <form className=\"form\" onSubmit={handleLogin}>\n        <h2 className=\"form__title\">Login</h2>\n        <input\n          type=\"text\"\n          className=\"form__input\"\n          placeholder=\"Email or Username\"\n          value={loginInput}\n          onChange={(e) => setLoginInput(e.target.value)}\n          required\n        />\n        <input\n          type=\"password\"\n          className=\"form__input\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          required\n        />\n        <button type=\"submit\" className=\"form__button\">Login</button>\n        <p onClick={toggleForm} className=\"form__toggle-link\">\n          Don't have an account? Register here.\n        </p>\n      </form>\n\n      {isModalOpen && <ModalMessage message={message} onClose={closeModal} />}\n    </>\n  );\n};\n\nexport default LoginForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}