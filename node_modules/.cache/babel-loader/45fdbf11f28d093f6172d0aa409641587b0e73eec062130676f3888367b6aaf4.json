{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{CharacterCard}from\"./CharacterCard-component\";import{useNavigate}from\"react-router-dom\";import\"./CharacterGrid-styles.css\";import SystemModal from\"./CreateCharacter/SystemModal-component\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const CharacterGrid=()=>{const[characters,setCharacters]=useState([]);const[isSystemModalVisible,setIsSystemModalVisible]=useState(false);const navigate=useNavigate();useEffect(()=>{const token=localStorage.getItem(\"token\");// Retrieve token from localStorage\nif(!token){console.error(\"Token not found. Please log in again.\");return;}fetch(\"/api/characters\",{method:\"GET\",headers:{Authorization:\"Bearer \".concat(token)// Include token in the header\n}}).then(res=>{if(!res.ok){throw new Error(\"Failed to fetch characters\");}return res.json();}).then(data=>{console.log(\"Characters loaded:\",data);setCharacters(data);}).catch(err=>console.error(err));},[]);const handleSystemSelect=(system,version)=>{setIsSystemModalVisible(false);console.log(\"Navigating to create-character/\".concat(system,\"/\").concat(version));navigate(\"/create-character/\".concat(system,\"/\").concat(version));};return/*#__PURE__*/_jsxs(\"div\",{className:\"character-grid\",children:[characters.map(character=>/*#__PURE__*/_jsx(CharacterCard,{character:character},character.id)),/*#__PURE__*/_jsx(CharacterCard,{onAddClick:()=>setIsSystemModalVisible(true)}),isSystemModalVisible&&/*#__PURE__*/_jsx(SystemModal,{onClose:()=>setIsSystemModalVisible(false),onSystemSelect:handleSystemSelect})]});};export default CharacterGrid;","map":{"version":3,"names":["React","useState","useEffect","CharacterCard","useNavigate","SystemModal","jsx","_jsx","jsxs","_jsxs","CharacterGrid","characters","setCharacters","isSystemModalVisible","setIsSystemModalVisible","navigate","token","localStorage","getItem","console","error","fetch","method","headers","Authorization","concat","then","res","ok","Error","json","data","log","catch","err","handleSystemSelect","system","version","className","children","map","character","id","onAddClick","onClose","onSystemSelect"],"sources":["/home/mbohach/Документи/personal/tabletop/src/Character/CharacterGrid-component.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { CharacterCard } from \"./CharacterCard-component\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./CharacterGrid-styles.css\";\nimport SystemModal from \"./CreateCharacter/SystemModal-component\";\n\nexport const CharacterGrid = () => {\n  const [characters, setCharacters] = useState([]);\n  const [isSystemModalVisible, setIsSystemModalVisible] = useState(false);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\"); // Retrieve token from localStorage\n    if (!token) {\n      console.error(\"Token not found. Please log in again.\");\n      return;\n    }\n\n    fetch(\"/api/characters\", {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`, // Include token in the header\n      },\n    })\n      .then((res) => {\n        if (!res.ok) {\n          throw new Error(\"Failed to fetch characters\");\n        }\n        return res.json();\n      })\n      .then((data) => {\n        console.log(\"Characters loaded:\", data);\n        setCharacters(data);\n      })\n      .catch((err) => console.error(err));\n  }, []);\n\n  const handleSystemSelect = (system, version) => {\n    setIsSystemModalVisible(false);\n    console.log(`Navigating to create-character/${system}/${version}`);\n    navigate(`/create-character/${system}/${version}`);\n  };\n\n  return (\n    <div className=\"character-grid\">\n      {characters.map((character) => (\n        <CharacterCard key={character.id} character={character} />\n      ))}\n      <CharacterCard onAddClick={() => setIsSystemModalVisible(true)} />\n      {isSystemModalVisible && (\n        <SystemModal\n          onClose={() => setIsSystemModalVisible(false)}\n          onSystemSelect={handleSystemSelect}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default CharacterGrid;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,aAAa,KAAQ,2BAA2B,CACzD,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,MAAO,4BAA4B,CACnC,MAAO,CAAAC,WAAW,KAAM,yCAAyC,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAElE,MAAO,MAAM,CAAAC,aAAa,CAAGA,CAAA,GAAM,CACjC,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAChD,KAAM,CAACY,oBAAoB,CAAEC,uBAAuB,CAAC,CAAGb,QAAQ,CAAC,KAAK,CAAC,CACvE,KAAM,CAAAc,QAAQ,CAAGX,WAAW,CAAC,CAAC,CAE9BF,SAAS,CAAC,IAAM,CACd,KAAM,CAAAc,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAE;AAC7C,GAAI,CAACF,KAAK,CAAE,CACVG,OAAO,CAACC,KAAK,CAAC,uCAAuC,CAAC,CACtD,OACF,CAEAC,KAAK,CAAC,iBAAiB,CAAE,CACvBC,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACPC,aAAa,WAAAC,MAAA,CAAYT,KAAK,CAAI;AACpC,CACF,CAAC,CAAC,CACCU,IAAI,CAAEC,GAAG,EAAK,CACb,GAAI,CAACA,GAAG,CAACC,EAAE,CAAE,CACX,KAAM,IAAI,CAAAC,KAAK,CAAC,4BAA4B,CAAC,CAC/C,CACA,MAAO,CAAAF,GAAG,CAACG,IAAI,CAAC,CAAC,CACnB,CAAC,CAAC,CACDJ,IAAI,CAAEK,IAAI,EAAK,CACdZ,OAAO,CAACa,GAAG,CAAC,oBAAoB,CAAED,IAAI,CAAC,CACvCnB,aAAa,CAACmB,IAAI,CAAC,CACrB,CAAC,CAAC,CACDE,KAAK,CAAEC,GAAG,EAAKf,OAAO,CAACC,KAAK,CAACc,GAAG,CAAC,CAAC,CACvC,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAC,kBAAkB,CAAGA,CAACC,MAAM,CAAEC,OAAO,GAAK,CAC9CvB,uBAAuB,CAAC,KAAK,CAAC,CAC9BK,OAAO,CAACa,GAAG,mCAAAP,MAAA,CAAmCW,MAAM,MAAAX,MAAA,CAAIY,OAAO,CAAE,CAAC,CAClEtB,QAAQ,sBAAAU,MAAA,CAAsBW,MAAM,MAAAX,MAAA,CAAIY,OAAO,CAAE,CAAC,CACpD,CAAC,CAED,mBACE5B,KAAA,QAAK6B,SAAS,CAAC,gBAAgB,CAAAC,QAAA,EAC5B5B,UAAU,CAAC6B,GAAG,CAAEC,SAAS,eACxBlC,IAAA,CAACJ,aAAa,EAAoBsC,SAAS,CAAEA,SAAU,EAAnCA,SAAS,CAACC,EAA2B,CAC1D,CAAC,cACFnC,IAAA,CAACJ,aAAa,EAACwC,UAAU,CAAEA,CAAA,GAAM7B,uBAAuB,CAAC,IAAI,CAAE,CAAE,CAAC,CACjED,oBAAoB,eACnBN,IAAA,CAACF,WAAW,EACVuC,OAAO,CAAEA,CAAA,GAAM9B,uBAAuB,CAAC,KAAK,CAAE,CAC9C+B,cAAc,CAAEV,kBAAmB,CACpC,CACF,EACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAAzB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}