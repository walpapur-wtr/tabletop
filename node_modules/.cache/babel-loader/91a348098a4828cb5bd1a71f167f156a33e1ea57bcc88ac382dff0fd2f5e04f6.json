{"ast":null,"code":"var _jsxFileName = \"/home/mbohach/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u0438/personal/tabletop/src/Login/LoginForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ModalMessage from './ModalMessage'; // Імпортуємо компонент для модального вікна\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LoginForm = ({\n  toggleForm,\n  onLoginSuccess\n}) => {\n  _s();\n  const [loginInput, setLoginInput] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState(''); // Для повідомлень\n  const [isModalOpen, setIsModalOpen] = useState(false); // Стан модального вікна\n\n  const handleLogin = async e => {\n    e.preventDefault();\n\n    // Перевірка, чи введене значення є email чи username\n    const isEmail = loginInput.includes('@');\n    const payload = isEmail ? {\n      email: loginInput,\n      password\n    } // Якщо email, передаємо email\n    : {\n      username: loginInput,\n      password\n    }; // Якщо username, передаємо username\n\n    try {\n      const response = await fetch('/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      const result = await response.json();\n      if (response.ok) {\n        setMessage('Login successful');\n        localStorage.setItem(\"token\", result.token); // Save token\n        onLoginSuccess(result.username); // Pass the username to the parent component\n      } else {\n        setMessage(result.message || 'Login failed');\n      }\n    } catch (error) {\n      setMessage('Login failed: ' + error.message);\n    } finally {\n      setIsModalOpen(true); // Відкриваємо модальне вікно після запиту\n    }\n  };\n  const closeModal = () => {\n    setIsModalOpen(false); // Закриваємо модальне вікно\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"form__title\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form__input\",\n        placeholder: \"Email or Username\",\n        value: loginInput,\n        onChange: e => setLoginInput(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"form__input\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"form__button\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: toggleForm,\n        className: \"form__toggle-link\",\n        children: \"Don't have an account? Register here.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(ModalMessage, {\n      message: message,\n      onClose: closeModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true);\n};\n_s(LoginForm, \"JyVcKEBfULu3T6xd5K3DDSIcy3M=\");\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","ModalMessage","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginForm","toggleForm","onLoginSuccess","_s","loginInput","setLoginInput","password","setPassword","message","setMessage","isModalOpen","setIsModalOpen","handleLogin","e","preventDefault","isEmail","includes","payload","email","username","response","fetch","method","headers","body","JSON","stringify","result","json","ok","localStorage","setItem","token","error","closeModal","children","className","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","required","onClick","onClose","_c","$RefreshReg$"],"sources":["/home/mbohach/Документи/personal/tabletop/src/Login/LoginForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport ModalMessage from './ModalMessage';  // Імпортуємо компонент для модального вікна\n\nconst LoginForm = ({ toggleForm, onLoginSuccess }) => {\n  const [loginInput, setLoginInput] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');  // Для повідомлень\n  const [isModalOpen, setIsModalOpen] = useState(false);  // Стан модального вікна\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n\n    // Перевірка, чи введене значення є email чи username\n    const isEmail = loginInput.includes('@');\n    const payload = isEmail\n      ? { email: loginInput, password }  // Якщо email, передаємо email\n      : { username: loginInput, password };  // Якщо username, передаємо username\n\n    try {\n      const response = await fetch('/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(payload),\n      });\n\n      const result = await response.json();\n\n      if (response.ok) {\n        setMessage('Login successful');\n        localStorage.setItem(\"token\", result.token); // Save token\n        onLoginSuccess(result.username); // Pass the username to the parent component\n      } else {\n        setMessage(result.message || 'Login failed');\n      }\n    } catch (error) {\n      setMessage('Login failed: ' + error.message);\n    } finally {\n      setIsModalOpen(true); // Відкриваємо модальне вікно після запиту\n    }\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);  // Закриваємо модальне вікно\n  };\n\n  return (\n    <>\n      <form className=\"form\" onSubmit={handleLogin}>\n        <h2 className=\"form__title\">Login</h2>\n        <input\n          type=\"text\"\n          className=\"form__input\"\n          placeholder=\"Email or Username\"\n          value={loginInput}\n          onChange={(e) => setLoginInput(e.target.value)}\n          required\n        />\n        <input\n          type=\"password\"\n          className=\"form__input\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          required\n        />\n        <button type=\"submit\" className=\"form__button\">Login</button>\n        <p onClick={toggleForm} className=\"form__toggle-link\">\n          Don't have an account? Register here.\n        </p>\n      </form>\n\n      {isModalOpen && <ModalMessage message={message} onClose={closeModal} />}\n    </>\n  );\n};\n\nexport default LoginForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}