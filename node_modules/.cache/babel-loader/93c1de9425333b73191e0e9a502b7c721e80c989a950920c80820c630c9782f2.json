{"ast":null,"code":"var _jsxFileName = \"/home/mbohach/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u0438/personal/tabletop/src/Login/RegisterForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ModalMessage from './ModalMessage'; // Імпортуємо компонент для модального вікна\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RegisterForm = ({\n  toggleForm\n}) => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState(''); // Для повідомлень\n  const [isModalOpen, setIsModalOpen] = useState(false); // Стан модального вікна\n\n  const handleRegister = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('/api/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          username,\n          password\n        })\n      });\n      if (response.ok) {\n        setMessage('Registration successful');\n      } else {\n        const result = await response.json();\n        setMessage(result.message || 'Registration failed');\n      }\n    } catch (error) {\n      setMessage('Error during registration: ' + error.message);\n    } finally {\n      setIsModalOpen(true); // Відкриваємо модальне вікно після запиту\n    }\n  };\n  const closeModal = () => {\n    setIsModalOpen(false); // Закриваємо модальне вікно\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: handleRegister,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: toggleForm,\n        className: \"toggle-link\",\n        children: \"Already have an account? Login here.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(ModalMessage, {\n      message: message,\n      onClose: closeModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true);\n};\n_s(RegisterForm, \"qwDYxZhSxNfDoC2Bkmi1GK3/Pog=\");\n_c = RegisterForm;\nexport default RegisterForm;\nvar _c;\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"names":["React","useState","ModalMessage","jsxDEV","_jsxDEV","Fragment","_Fragment","RegisterForm","toggleForm","_s","email","setEmail","username","setUsername","password","setPassword","message","setMessage","isModalOpen","setIsModalOpen","handleRegister","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","result","json","error","closeModal","children","className","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","required","onClick","onClose","_c","$RefreshReg$"],"sources":["/home/mbohach/Документи/personal/tabletop/src/Login/RegisterForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport ModalMessage from './ModalMessage';  // Імпортуємо компонент для модального вікна\n\nconst RegisterForm = ({ toggleForm }) => {\n  const [email, setEmail] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');  // Для повідомлень\n  const [isModalOpen, setIsModalOpen] = useState(false);  // Стан модального вікна\n\n  const handleRegister = async (e) => {\n    e.preventDefault();\n\n    try {\n      const response = await fetch('/api/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email, username, password }),\n      });\n\n      if (response.ok) {\n        setMessage('Registration successful');\n      } else {\n        const result = await response.json();\n        setMessage(result.message || 'Registration failed');\n      }\n    } catch (error) {\n      setMessage('Error during registration: ' + error.message);\n    } finally {\n      setIsModalOpen(true);  // Відкриваємо модальне вікно після запиту\n    }\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);  // Закриваємо модальне вікно\n  };\n\n  return (\n    <>\n      <form className=\"form\" onSubmit={handleRegister}>\n        <h2>Register</h2>\n        <input\n          type=\"email\"\n          placeholder=\"Email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          required\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Username\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n          required\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          required\n        />\n        <button type=\"submit\">Register</button>\n        <p onClick={toggleForm} className=\"toggle-link\">\n          Already have an account? Login here.\n        </p>\n      </form>\n\n      {isModalOpen && <ModalMessage message={message} onClose={closeModal} />}\n    </>\n  );\n};\n\nexport default RegisterForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}