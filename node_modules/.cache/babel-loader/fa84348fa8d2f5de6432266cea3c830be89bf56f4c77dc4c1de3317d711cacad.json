{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{CharacterCard}from\"./CharacterCard-component\";import{CharacterForm}from\"./CharacterForm-component\";import\"./CharacterGrid-styles.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const CharacterGrid=()=>{const[characters,setCharacters]=useState([]);const[isFormVisible,setIsFormVisible]=useState(false);useEffect(()=>{// Fetch characters from server\nfetch(\"/api/characters\").then(res=>res.json()).then(data=>{console.log(\"Characters loaded:\",data);setCharacters(data);}).catch(err=>console.error(err));},[]);const handleAddCharacter=newCharacter=>{// Send new character to server\nfetch(\"/api/characters\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(newCharacter)}).then(res=>res.json()).then(data=>{if(data.character){setCharacters(prev=>[...prev,data.character]);}else{console.error(\"Error creating character:\",data.error);}}).catch(err=>console.error(err));setIsFormVisible(false);};return/*#__PURE__*/_jsxs(\"div\",{className:\"character-grid\",children:[characters.map(character=>/*#__PURE__*/_jsx(CharacterCard,{character:character},character.id)),/*#__PURE__*/_jsx(CharacterCard,{onAddClick:()=>setIsFormVisible(true)}),isFormVisible&&/*#__PURE__*/_jsx(\"div\",{className:\"character-grid__form\",children:/*#__PURE__*/_jsx(CharacterForm,{onSubmit:handleAddCharacter,onCancel:()=>setIsFormVisible(false)})})]});};export default CharacterGrid;","map":{"version":3,"names":["React","useState","useEffect","CharacterCard","CharacterForm","jsx","_jsx","jsxs","_jsxs","CharacterGrid","characters","setCharacters","isFormVisible","setIsFormVisible","fetch","then","res","json","data","console","log","catch","err","error","handleAddCharacter","newCharacter","method","headers","body","JSON","stringify","character","prev","className","children","map","id","onAddClick","onSubmit","onCancel"],"sources":["/home/mbohach/Документи/personal/tabletop/src/Character/CharacterGrid-component.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { CharacterCard } from \"./CharacterCard-component\";\nimport { CharacterForm } from \"./CharacterForm-component\";\nimport \"./CharacterGrid-styles.css\";\n\nexport const CharacterGrid = () => {\n  const [characters, setCharacters] = useState([]);\n  const [isFormVisible, setIsFormVisible] = useState(false);\n\n  useEffect(() => {\n    // Fetch characters from server\n    fetch(\"/api/characters\")\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(\"Characters loaded:\", data);\n        setCharacters(data);\n      })\n      .catch((err) => console.error(err));\n  }, []);\n\n  const handleAddCharacter = (newCharacter) => {\n    // Send new character to server\n    fetch(\"/api/characters\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(newCharacter),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.character) {\n          setCharacters((prev) => [...prev, data.character]);\n        } else {\n          console.error(\"Error creating character:\", data.error);\n        }\n      })\n      .catch((err) => console.error(err));\n\n    setIsFormVisible(false);\n  };\n\n  return (\n    <div className=\"character-grid\">\n      {characters.map((character) => (\n        <CharacterCard key={character.id} character={character} />\n      ))}\n      <CharacterCard onAddClick={() => setIsFormVisible(true)} />\n      {isFormVisible && (\n        <div className=\"character-grid__form\">\n          <CharacterForm\n            onSubmit={handleAddCharacter}\n            onCancel={() => setIsFormVisible(false)}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CharacterGrid;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,aAAa,KAAQ,2BAA2B,CACzD,OAASC,aAAa,KAAQ,2BAA2B,CACzD,MAAO,4BAA4B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEpC,MAAO,MAAM,CAAAC,aAAa,CAAGA,CAAA,GAAM,CACjC,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAChD,KAAM,CAACW,aAAa,CAAEC,gBAAgB,CAAC,CAAGZ,QAAQ,CAAC,KAAK,CAAC,CAEzDC,SAAS,CAAC,IAAM,CACd;AACAY,KAAK,CAAC,iBAAiB,CAAC,CACrBC,IAAI,CAAEC,GAAG,EAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,EAAK,CACdC,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAEF,IAAI,CAAC,CACvCP,aAAa,CAACO,IAAI,CAAC,CACrB,CAAC,CAAC,CACDG,KAAK,CAAEC,GAAG,EAAKH,OAAO,CAACI,KAAK,CAACD,GAAG,CAAC,CAAC,CACvC,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAE,kBAAkB,CAAIC,YAAY,EAAK,CAC3C;AACAX,KAAK,CAAC,iBAAiB,CAAE,CACvBY,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACL,YAAY,CACnC,CAAC,CAAC,CACCV,IAAI,CAAEC,GAAG,EAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,EAAK,CACd,GAAIA,IAAI,CAACa,SAAS,CAAE,CAClBpB,aAAa,CAAEqB,IAAI,EAAK,CAAC,GAAGA,IAAI,CAAEd,IAAI,CAACa,SAAS,CAAC,CAAC,CACpD,CAAC,IAAM,CACLZ,OAAO,CAACI,KAAK,CAAC,2BAA2B,CAAEL,IAAI,CAACK,KAAK,CAAC,CACxD,CACF,CAAC,CAAC,CACDF,KAAK,CAAEC,GAAG,EAAKH,OAAO,CAACI,KAAK,CAACD,GAAG,CAAC,CAAC,CAErCT,gBAAgB,CAAC,KAAK,CAAC,CACzB,CAAC,CAED,mBACEL,KAAA,QAAKyB,SAAS,CAAC,gBAAgB,CAAAC,QAAA,EAC5BxB,UAAU,CAACyB,GAAG,CAAEJ,SAAS,eACxBzB,IAAA,CAACH,aAAa,EAAoB4B,SAAS,CAAEA,SAAU,EAAnCA,SAAS,CAACK,EAA2B,CAC1D,CAAC,cACF9B,IAAA,CAACH,aAAa,EAACkC,UAAU,CAAEA,CAAA,GAAMxB,gBAAgB,CAAC,IAAI,CAAE,CAAE,CAAC,CAC1DD,aAAa,eACZN,IAAA,QAAK2B,SAAS,CAAC,sBAAsB,CAAAC,QAAA,cACnC5B,IAAA,CAACF,aAAa,EACZkC,QAAQ,CAAEd,kBAAmB,CAC7Be,QAAQ,CAAEA,CAAA,GAAM1B,gBAAgB,CAAC,KAAK,CAAE,CACzC,CAAC,CACC,CACN,EACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAAJ,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}