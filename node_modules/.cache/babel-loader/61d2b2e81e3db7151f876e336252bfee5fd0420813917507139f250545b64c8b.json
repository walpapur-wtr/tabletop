{"ast":null,"code":"import _objectSpread from\"/home/mbohach/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u0438/personal/tabletop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState}from\"react\";import{rollDice}from\"../../DiceRoller/Roll-script\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PathfinderForm=_ref=>{let{sections=[]}=_ref;// Default to an empty array\nconsole.log(\"PathFinderForm received sections:\",sections);const[formData,setFormData]=useState({});if(!Array.isArray(sections)||sections.length===0){console.log(\"PathFinderForm received sections:\",sections);console.error(\"Invalid or empty 'sections' prop passed to DnDForm:\",sections);return/*#__PURE__*/_jsx(\"p\",{children:\"\\u041D\\u0435\\u043C\\u0430\\u0454 \\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u0438\\u0445 \\u0441\\u0435\\u043A\\u0446\\u0456\\u0439 \\u0434\\u043B\\u044F \\u0446\\u0456\\u0454\\u0457 \\u0441\\u0438\\u0441\\u0442\\u0435\\u043C\\u0438.\"});}const handleInputChange=(e,sectionName)=>{const{name,value}=e.target;console.log(\"Input changed in section \\\"\".concat(sectionName,\"\\\", field \\\"\").concat(name,\"\\\":\"),value);setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{[sectionName]:_objectSpread(_objectSpread({},prev[sectionName]),{},{[name]:value})}));};const handleDiceRoll=async(sectionName,fieldName)=>{try{console.log(\"Rolling dice for section \\\"\".concat(sectionName,\"\\\", field \\\"\").concat(fieldName,\"\\\"\"));const rollResult=await rollDice(\"4d6\");const sortedRolls=rollResult.rolls.map(r=>r.value).sort((a,b)=>b-a);const total=sortedRolls.slice(0,3).reduce((sum,val)=>sum+val,0);console.log(\"Dice roll result for \\\"\".concat(fieldName,\"\\\":\"),total);setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{[sectionName]:_objectSpread(_objectSpread({},prev[sectionName]),{},{[fieldName]:total})}));}catch(error){console.error(\"Error rolling dice:\",error);}};const saveCharacter=()=>{const token=localStorage.getItem(\"token\");// Retrieve token\nfetch(\"/api/characters\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\",Authorization:\"Bearer \".concat(token)// Include token in the header\n},body:JSON.stringify({system:\"dnd\",sections:formData})}).then(res=>res.json()).then(data=>{console.log(\"Character saved successfully:\",data);window.location.href=\"/character/\".concat(data.character.id);}).catch(err=>console.error(\"Error saving character:\",err));};return/*#__PURE__*/_jsxs(\"div\",{className:\"character-form\",children:[sections.map(section=>/*#__PURE__*/_jsxs(\"div\",{className:\"character-form__section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:section.name}),section.fields.map(field=>{var _formData$section$nam;return/*#__PURE__*/_jsxs(\"div\",{className:\"character-form__field\",children:[/*#__PURE__*/_jsx(\"label\",{children:field.label}),/*#__PURE__*/_jsxs(\"div\",{className:\"character-form__input-group\",children:[/*#__PURE__*/_jsx(\"input\",{type:field.type,name:field.name,value:((_formData$section$nam=formData[section.name])===null||_formData$section$nam===void 0?void 0:_formData$section$nam[field.name])||\"\",onChange:e=>handleInputChange(e,section.name),required:field.required}),field.rollable&&/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"dice-roll-button\",onClick:()=>handleDiceRoll(section.name,field.name),children:\"\\uD83C\\uDFB2\"})]})]},field.name);})]},section.name)),/*#__PURE__*/_jsx(\"div\",{className:\"character-form__navigation\",children:/*#__PURE__*/_jsx(\"button\",{onClick:saveCharacter,className:\"save-button\",children:\"\\u0417\\u0431\\u0435\\u0440\\u0435\\u0433\\u0442\\u0438\"})})]});};export default PathfinderForm;","map":{"version":3,"names":["React","useState","rollDice","jsx","_jsx","jsxs","_jsxs","PathfinderForm","_ref","sections","console","log","formData","setFormData","Array","isArray","length","error","children","handleInputChange","e","sectionName","name","value","target","concat","prev","_objectSpread","handleDiceRoll","fieldName","rollResult","sortedRolls","rolls","map","r","sort","a","b","total","slice","reduce","sum","val","saveCharacter","token","localStorage","getItem","fetch","method","headers","Authorization","body","JSON","stringify","system","then","res","json","data","window","location","href","character","id","catch","err","className","section","fields","field","_formData$section$nam","label","type","onChange","required","rollable","onClick"],"sources":["/home/mbohach/–î–æ–∫—É–º–µ–Ω—Ç–∏/personal/tabletop/src/Character/CreateCharacter/PathFinderForm-component.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { rollDice } from \"../../DiceRoller/Roll-script\";\n\nconst PathfinderForm = ({ sections = [] }) => { // Default to an empty array\n  console.log(\"PathFinderForm received sections:\", sections);\n  const [formData, setFormData] = useState({});\n\n  if (!Array.isArray(sections) || sections.length === 0) {\n    console.log(\"PathFinderForm received sections:\", sections);\n    console.error(\"Invalid or empty 'sections' prop passed to DnDForm:\", sections);\n    return <p>–ù–µ–º–∞—î –¥–æ—Å—Ç—É–ø–Ω–∏—Ö —Å–µ–∫—Ü—ñ–π –¥–ª—è —Ü—ñ—î—ó —Å–∏—Å—Ç–µ–º–∏.</p>;\n  }\n\n  const handleInputChange = (e, sectionName) => {\n    const { name, value } = e.target;\n    console.log(`Input changed in section \"${sectionName}\", field \"${name}\":`, value);\n    setFormData((prev) => ({\n      ...prev,\n      [sectionName]: {\n        ...prev[sectionName],\n        [name]: value,\n      },\n    }));\n  };\n\n  const handleDiceRoll = async (sectionName, fieldName) => {\n    try {\n      console.log(`Rolling dice for section \"${sectionName}\", field \"${fieldName}\"`);\n      const rollResult = await rollDice(\"4d6\");\n      const sortedRolls = rollResult.rolls.map((r) => r.value).sort((a, b) => b - a);\n      const total = sortedRolls.slice(0, 3).reduce((sum, val) => sum + val, 0);\n      console.log(`Dice roll result for \"${fieldName}\":`, total);\n\n      setFormData((prev) => ({\n        ...prev,\n        [sectionName]: {\n          ...prev[sectionName],\n          [fieldName]: total,\n        },\n      }));\n    } catch (error) {\n      console.error(\"Error rolling dice:\", error);\n    }\n  };\n\n  const saveCharacter = () => {\n    const token = localStorage.getItem(\"token\"); // Retrieve token\n    fetch(\"/api/characters\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`, // Include token in the header\n      },\n      body: JSON.stringify({\n        system: \"dnd\",\n        sections: formData,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(\"Character saved successfully:\", data);\n        window.location.href = `/character/${data.character.id}`;\n      })\n      .catch((err) => console.error(\"Error saving character:\", err));\n  };\n\n  return (\n    <div className=\"character-form\">\n      {sections.map((section) => (\n        <div key={section.name} className=\"character-form__section\">\n          <h2>{section.name}</h2>\n          {section.fields.map((field) => (\n            <div key={field.name} className=\"character-form__field\">\n              <label>{field.label}</label>\n              <div className=\"character-form__input-group\">\n                <input\n                  type={field.type}\n                  name={field.name}\n                  value={formData[section.name]?.[field.name] || \"\"}\n                  onChange={(e) => handleInputChange(e, section.name)}\n                  required={field.required}\n                />\n                {field.rollable && (\n                  <button\n                    type=\"button\"\n                    className=\"dice-roll-button\"\n                    onClick={() => handleDiceRoll(section.name, field.name)}\n                  >\n                    üé≤\n                  </button>\n                )}\n              </div>\n            </div>\n          ))}\n        </div>\n      ))}\n      <div className=\"character-form__navigation\">\n        <button onClick={saveCharacter} className=\"save-button\">\n          –ó–±–µ—Ä–µ–≥—Ç–∏\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default PathfinderForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}