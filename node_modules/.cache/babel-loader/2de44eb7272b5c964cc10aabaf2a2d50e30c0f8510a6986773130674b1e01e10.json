{"ast":null,"code":"var _jsxFileName = \"/home/mbohach/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u0438/personal/tabletop/src/Character/CharacterGrid-component.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { CharacterCard } from \"./CharacterCard-component\";\nimport { CharacterForm } from \"./CharacterForm-component\";\nimport \"./CharacterGrid-styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CharacterGrid = () => {\n  _s();\n  const [characters, setCharacters] = useState([]);\n  const [isFormVisible, setIsFormVisible] = useState(false);\n  useEffect(() => {\n    // Fetch characters from server\n    fetch(\"/api/characters\").then(res => res.json()).then(data => {\n      console.log(\"Characters loaded:\", data);\n      setCharacters(data);\n    }).catch(err => console.error(err));\n  }, []);\n  const handleAddCharacter = newCharacter => {\n    // Send new character to server\n    fetch(\"/api/characters\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newCharacter)\n    }).then(res => res.json()).then(data => {\n      if (data.character) {\n        setCharacters(prev => [...prev, data.character]);\n      } else {\n        console.error(\"Error creating character:\", data.error);\n      }\n    }).catch(err => console.error(err));\n    setIsFormVisible(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"character-grid\",\n    children: [characters.map(character => /*#__PURE__*/_jsxDEV(CharacterCard, {\n      character: character\n    }, character.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(CharacterCard, {\n      onAddClick: () => setIsFormVisible(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), isFormVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"character-grid__form\",\n      children: /*#__PURE__*/_jsxDEV(CharacterForm, {\n        onSubmit: handleAddCharacter,\n        onCancel: () => setIsFormVisible(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(CharacterGrid, \"Csi4oru++F9RIBV0UXSBC4xrkpo=\");\n_c = CharacterGrid;\nexport default CharacterGrid;\nvar _c;\n$RefreshReg$(_c, \"CharacterGrid\");","map":{"version":3,"names":["React","useState","useEffect","CharacterCard","CharacterForm","jsxDEV","_jsxDEV","CharacterGrid","_s","characters","setCharacters","isFormVisible","setIsFormVisible","fetch","then","res","json","data","console","log","catch","err","error","handleAddCharacter","newCharacter","method","headers","body","JSON","stringify","character","prev","className","children","map","id","fileName","_jsxFileName","lineNumber","columnNumber","onAddClick","onSubmit","onCancel","_c","$RefreshReg$"],"sources":["/home/mbohach/Документи/personal/tabletop/src/Character/CharacterGrid-component.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { CharacterCard } from \"./CharacterCard-component\";\nimport { CharacterForm } from \"./CharacterForm-component\";\nimport \"./CharacterGrid-styles.css\";\n\nexport const CharacterGrid = () => {\n  const [characters, setCharacters] = useState([]);\n  const [isFormVisible, setIsFormVisible] = useState(false);\n\n  useEffect(() => {\n    // Fetch characters from server\n    fetch(\"/api/characters\")\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(\"Characters loaded:\", data);\n        setCharacters(data);\n      })\n      .catch((err) => console.error(err));\n  }, []);\n\n  const handleAddCharacter = (newCharacter) => {\n    // Send new character to server\n    fetch(\"/api/characters\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(newCharacter),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.character) {\n          setCharacters((prev) => [...prev, data.character]);\n        } else {\n          console.error(\"Error creating character:\", data.error);\n        }\n      })\n      .catch((err) => console.error(err));\n\n    setIsFormVisible(false);\n  };\n\n  return (\n    <div className=\"character-grid\">\n      {characters.map((character) => (\n        <CharacterCard key={character.id} character={character} />\n      ))}\n      <CharacterCard onAddClick={() => setIsFormVisible(true)} />\n      {isFormVisible && (\n        <div className=\"character-grid__form\">\n          <CharacterForm\n            onSubmit={handleAddCharacter}\n            onCancel={() => setIsFormVisible(false)}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CharacterGrid;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}